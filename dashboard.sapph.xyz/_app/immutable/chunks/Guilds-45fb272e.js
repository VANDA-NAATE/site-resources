let p=new Map;const w={get(s,y,o=!1,g=!1){if(p.has(s)&&!g)return o?p.get(s):new Promise(u=>u(p.get(s)));if(!o)return new Promise(async(u,l)=>{try{let n=await y(`/api/v2/guilds/${s}?forceCustomBranding=true`);if(n.status!==200)return l({code:n.status,...await n.json()});let e=await n.json();if(e){let f=new Set([0,2,5,10,11,12,13]);e.getTextBasedChannels=(d=!1)=>{if(d){let a=e.channels.filter(r=>r.type===4);return[{},...a].map(r=>({...r,children:e.channels.filter(t=>(r.id?t.parent_id===r.id:!t.parent_id)&&f.has(t.type)).sort((t,i)=>t.type===i.type?t.position-i.position:t.type===13&&i.type===2?-1:t.type===13?1:i.type===13?-1:t.type===2?1:i.type===2?-1:t.position-i.position)})).sort((r,t)=>r.position-t.position)}return e.channels.filter(a=>f.has(a.type))}}return p.set(s,e),u(e)}catch(n){return l(n)}})}};export{w as G};
